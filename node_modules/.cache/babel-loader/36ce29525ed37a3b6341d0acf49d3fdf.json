{"ast":null,"code":"var _jsxFileName = \"F:\\\\assignment\\\\todolist\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('lists');\n  console.log(list);\n\n  if (list) {\n    return JSON.parse(localStorage.getItem('lists'));\n  } else {\n    return [];\n  }\n};\n\nexport default function App() {\n  _s();\n\n  const [inputData, setInputData] = useState('');\n  const [items, setItems] = useState(getLocalStorage());\n\n  const addItem = () => {\n    if (!inputData) {} else {\n      const allInputData = {\n        id: new Date().getTime().toString(),\n        name: inputData\n      };\n      setItems([...items, allInputData]);\n      setInputData('');\n    }\n  };\n\n  const deleteItem = index => {\n    const updatedItems = items.filter(elem => {\n      return index != elem.id;\n    });\n    setItems(updatedItems);\n  };\n\n  const editItem = id => {\n    let newEditItem = items.find(elem => {\n      return elem.id === id;\n    });\n  };\n\n  const removeAll = () => {\n    setItems([]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('lists', JSON.stringify(items));\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"child-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          children: /*#__PURE__*/_jsxDEV(\"figcaption\", {\n            children: \"Add Your List Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add Items...\",\n            value: inputData,\n            onChange: e => {\n              setInputData(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus add-btn\",\n            title: \"Add Item\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: items.map(elem => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"eachItem\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: elem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-edit add-btn\",\n                  title: \"Edit Item\",\n                  onClick: () => editItem(elem.id),\n                  children: \"E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 34\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-trash-alt add-btn\",\n                  title: \"Delete Item\",\n                  onClick: () => deleteItem(elem.id),\n                  children: \"D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 32\n              }, this)]\n            }, elem.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn effect04\",\n            \"data-sm-link-text\": \"Remove All\",\n            onClick: removeAll,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"CHECK LIST\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 108\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"oVr6G8jWjUtwqbP6OrAIMUYPWlc=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/assignment/todolist/src/App.js"],"names":["React","Fragment","useState","useEffect","getLocalStorage","list","localStorage","getItem","console","log","JSON","parse","App","inputData","setInputData","items","setItems","addItem","allInputData","id","Date","getTime","toString","name","deleteItem","index","updatedItems","filter","elem","editItem","newEditItem","find","removeAll","setItem","stringify","e","target","value","map"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect} from 'react'\nimport \"./App.css\"\n\nconst getLocalStorage = ()=>{\n  let list = localStorage.getItem('lists');\n  console.log(list);\n  if(list){\n    return JSON.parse(localStorage.getItem('lists'));\n  }else{\n    return [];\n  }\n}\n\nexport default function App() {\n\n    const [inputData, setInputData]= useState('');\n    const [items, setItems]= useState(getLocalStorage());\n\n  \n    const addItem=()=>{\n            if(!inputData){\n\n            }\n            else{\n                  const allInputData = {id:new Date().getTime().toString(), name : inputData}\n                  setItems([...items,  allInputData]);\n                  setInputData('')\n            }\n    }\n\n    const deleteItem=(index)=>{\n      const updatedItems = items.filter((elem)=>{\n                return index != elem.id;\n      });\n      setItems(updatedItems);\n    }\n\n    \n    const editItem=(id)=>{\n            let newEditItem = items.find((elem)=>{\n              return elem.id === id\n            }   \n            )}\n\n    const removeAll=()=>{\n      setItems([]);\n    }\n\n\n    useEffect(() => {\n     localStorage.setItem('lists', JSON.stringify(items))\n    }, [items]);\n\n    \n\n\n    return (\n        <Fragment>\n            <div className=\"main-div\">\n                 <div className=\"child-div\">\n                    \n                    <figure>\n                         <figcaption>Add Your List Here</figcaption>\n                    </figure>\n                    \n                    <div className=\"addItems\">\n                      \n                       <input type=\"text\" placeholder=\"Add Items...\"\n                         value = {inputData}\n                         onChange={(e)=>{setInputData(e.target.value)}}>\n                       </input>\n                       \n                       <i className=\"fa fa-plus add-btn\" title=\"Add Item\" onClick={addItem}></i>\n                    </div>\n                   \n                    <div className=\"showItems\">\n\n                         {\n                           items.map((elem)=>{\n                             return(\n                               <div className=\"eachItem\" key={elem.id}>\n                               <h3>{elem.name}</h3>\n                               <div className=\"todo-btn\">\n                                 <i className=\"far fa-edit add-btn\" title=\"Edit Item\" onClick={()=>editItem(elem.id)}>E</i>\n                                 <i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\" onClick={()=>deleteItem(elem.id)}>D</i>\n                               </div>\n                               \n                               \n                            </div>\n                             )\n                           })\n                         }\n                         \n                    </div>\n                    \n                    <div className=\"showItems\">\n                       <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}><span>CHECK LIST</span></button>\n                    \n                    </div>\n\n                 </div>\n                \n            </div>\n        </Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}